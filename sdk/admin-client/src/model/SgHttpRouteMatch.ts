// This file was generated by [ts-rs](https://github.com/Aleph-Alpha/ts-rs). Do not edit this file manually.
import type { SgHttpHeaderMatch } from "./SgHttpHeaderMatch";
import type { SgHttpMethodMatch } from "./SgHttpMethodMatch";
import type { SgHttpPathMatch } from "./SgHttpPathMatch";
import type { SgHttpQueryMatch } from "./SgHttpQueryMatch";

/**
 * HTTPRouteMatch defines the predicate used to match requests to a given action.
 * Multiple match types are ANDed together, i.e. the match will evaluate to true only if all conditions are satisfied.
 */
export type SgHttpRouteMatch = { 
/**
 * Path specifies a HTTP request path matcher.
 * If this field is not specified, a default prefix match on the “/” path is provided.
 */
path: SgHttpPathMatch | null, 
/**
 * Headers specifies HTTP request header matchers.
 * Multiple match values are ANDed together, meaning, a request must match all the specified headers to select the route.
 */
header: Array<SgHttpHeaderMatch> | null, 
/**
 * Query specifies HTTP query parameter matchers.
 * Multiple match values are ANDed together, meaning, a request must match all the specified query parameters to select the route.
 */
query: Array<SgHttpQueryMatch> | null, 
/**
 * Method specifies HTTP method matcher.
 * When specified, this route will be matched only if the request has the specified method.
 */
method: Array<SgHttpMethodMatch> | null, };